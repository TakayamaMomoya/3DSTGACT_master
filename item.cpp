//*****************************************************
//
// アイテムの処理[item.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "main.h"
#include "item.h"
#include "renderer.h"
#include "debugproc.h"
#include "manager.h"
#include "object.h"
#include "number.h"

//*****************************************************
// 静的メンバ変数宣言
//*****************************************************
LPDIRECT3DTEXTURE9 CItem::m_pTexture = nullptr;	// テクスチャのポインタ
int CItem::m_nNumAll = 0;	// 総数

//=====================================================
// コンストラクタ
//=====================================================
CItem::CItem()
{
	// 総数カウントアップ
	m_nNumAll++;
}

//=====================================================
// デストラクタ
//=====================================================
CItem::~CItem()
{
	m_nNumAll--;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CItem::Init(void)
{
	// 継承クラスの初期化
	CObject2D::Init();

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CItem::Uninit(void)
{
	// 継承クラスの終了
	CObject2D::Uninit();
}

//=====================================================
// 更新処理
//=====================================================
void CItem::Update(void)
{
	// 継承クラスの更新
	CObject2D::Update();

	// 頂点位置設定
	CObject2D::SetVtx();
}

//=====================================================
// 描画処理
//=====================================================
void CItem::Draw(void)
{
	// 継承クラスの描画
	CObject2D::Draw();

}

//=====================================================
// 生成処理
//=====================================================
CItem *CItem::Create(D3DXVECTOR3 pos, TYPE type, float height, float width)
{
	CItem *pItem = nullptr;

	if (pItem == nullptr)
	{// インスタンス生成
		pItem = new CItem;

		// 初期化処理
		pItem->Init();

		pItem->SetSize(width, height);
		pItem->SetPosition(D3DXVECTOR3(pos));
	}

	return pItem;
}

//=====================================================
// 読込処理
//=====================================================
HRESULT CItem::Load(void)
{
	if (m_pTexture == nullptr)
	{
		// デバイスの取得
		LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

		D3DXCreateTextureFromFile
		(
			pDevice,
			"data\\TEXTURE\\ITEM\\item000.png",
			&m_pTexture
		);
	}

	return S_OK;
}

//=====================================================
// テクスチャ破棄
//=====================================================
void CItem::Unload(void)
{
	if (m_pTexture != nullptr)
	{
		m_pTexture->Release();
		m_pTexture = nullptr;
	}
}